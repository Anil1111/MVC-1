@model WebApplication2.Models.Strategy

@{
    ViewBag.Title = "Edit";
}



<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.3/jquery.min.js"></script>
<script src="http://code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/js/bootstrap-datepicker.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.css" rel="stylesheet">

<style>

    .nomargin {
        margin: 0 !important;
        margin-left: 0 !important;
        margin-right: 0 !important;
    }

    .nopadding {
        padding: 0 !important;
    }

    .rightmargin {
        margin-right: 20px;
    }

    .noleftpadding {
        padding-left: 0 !important;
    }

    .labelleft {
        text-align: left;
    }

    .formwhole {
        margin: 0 !important
    }

    .right {
        text-align: right;
    }

    textarea {
        width: 400px;
        height: 200px;
    }

    .minlength {
        min-height: 500px;
    }
</style>



<script>
    $(document).ready(function () {

        $('#txt_datepicker').datetimepicker({
            format: 'MM/DD/YY'
        });
    });


</script>

<br />
@using (Html.BeginForm())
{
    <table>
        <tr>
            <td class="col-md-2"><h4><span>Strategy-Edit</span></h4></td>
            <td class="col-md-1 right"><h5><input type="submit" value="Save" class="btn btn-default" onclick="location.href='@Url.Action("Edit", "Strategy")'" /></h5></td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.OSR, htmlAttributes: new { @class = "control-label col-md-5 right" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.OSR, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OSR, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-5 right" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <div class="form-group">
                    @Html.LabelFor(model => model.Updated, htmlAttributes: new { @class = "control-label col-md-5 right" })
                    <div class="col-md-5">
                        @Html.EditorFor(model => model.Updated, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Updated, "", new { @class = "text-danger" })
                    </div>
                </div>
            </td>
            <td>
                <button class="btn btn-default" type="button" value="Email" name="Email" onclick="location.href='@Url.Action("Email", "Strategy", new {id = Model.StrategyId})'">Email</button>

            </td>
        </tr>


    </table>

    @Html.AntiForgeryToken()

    <div class="form-horizontal formwhole">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StrategyId)

        <div class="form-group">

            <hr />
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Customer, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Customer, new { htmlAttributes = new { @class = "form-control nomargin" } })
                @Html.ValidationMessageFor(model => model.Customer, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndProduct, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.EndProduct, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndProduct, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-9"></div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Principal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Principal, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Principal, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-9"></div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Product, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3 ">
                @Html.EditorFor(model => model.Product, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Product, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-5">
                @Html.LabelFor(model => model.FollowUpDate, htmlAttributes: new { @class = "control-label col-md-1 noleftpadding" })
                <div class=" input-group noleftpadding col-md-4">

                    <div>
                        <div class="input-group date" data-provide="datepicker">
                            @*<input type="text" id="txt_datepicker" class="form-control" />*@
                            @Html.EditorFor(model => model.FollowUpDate, new { htmlAttributes = new { @class = "form-control" } })
                            <div class="input-group-addon">
                                <span class="glyphicon glyphicon-th"></span>
                            </div>
                        </div>
                    </div>

                    @*@Html.EditorFor(model => model.FollowUp, @"{0:MM\/dd\/yyyy}", new { htmlAttributes = new { @class = "form-control datepicker" } })*@
                    @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
                </div>

            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-9"></div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                @*@Html.DropDownListFor(m => m.Status, new SelectList(ViewBag.Status, "Status", "Text"), Model.Status, new { @class = "form-control" })*@
                @Html.DropDownListFor(m => m.Status, new SelectList(ViewBag.Status, "Status", "Text"), new { @class = "form-control" })
                @*@Html.DropDownList(m => m.Status, Model., Model.Status, new {@class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-9"></div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NextAction, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.NextAction, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NextAction, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-9"></div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ManagerComment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-lg-3">
                @*<textarea class="form-control" rows="5" id="comment">@Html.TextAreaFor(model => model.ManagerComment, 7, 33, null)</textarea>*@
                @*<textarea class="form-control" rows="7">@Html.TextAreaFor(model => model.ManagerComment, null) </textarea>*@
                @Html.TextAreaFor(model => model.ManagerComment, 7, 50, new { htmlAttributes = new { @class = "form-control , minlength" } })

                @Html.ValidationMessageFor(model => model.ManagerComment, "", new { @class = "text-danger" })
            </div>

            @*<div class="col-lg-9">*@

            <div class="col-lg-2">
                <input value="Meeting Scheduled" class="btn btn-default" onclick="location.href='@Url.Action("MeetingSch", "Strategy", new {id = Model.StrategyId})'" />
            </div>
            <div class="col-lg-2">
                <input value="Need to schedule visit" class="btn btn-default" onclick="location.href='@Url.Action("SchVisit", "Strategy", new {id = Model.StrategyId})'" />
            </div>
            <div class="col-lg-2">
                <input value="Need to schedule eMeeting" class="btn btn-default" onclick="location.href='@Url.Action("ScheMeet", "Strategy", new {id = Model.StrategyId})'" />
            </div>
            <div class="col-lg-2">
                <input value="No action at this time, followup planned" class="btn btn-default" onclick="location.href='@Url.Action("NoAct", "Strategy", new {id = Model.StrategyId})'" />
            </div>
            <div class="col-lg-2">
                <input value="Samples Requested" class="btn btn-default" onclick="location.href='@Url.Action("SampReq", "Strategy", new {id = Model.StrategyId})'" />
            </div>
            <div class="col-lg-2">
                <input value="Evaluating Samples" class="btn btn-default" onclick="location.href='@Url.Action("EvalSamp", "Strategy", new {id = Model.StrategyId})'" />
            </div>
            <div class="col-lg-2">
                <input value="Need to Confirm CEM location" class="btn btn-default" onclick="location.href='@Url.Action("ConfirmCEM", "Strategy", new {id = Model.StrategyId})'" />
            </div>
            @*</div>*@
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.History, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.TextAreaFor(model => model.History, 7, 33, null)
                @Html.ValidationMessageFor(model => model.History, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Group, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-9"></div>
        </div>

    </div>
}

<a href="javascript:void(0);" onclick="history.go(-1);">Back</a>

@*<div>
    <input type="submit" value="Go Back" name="Cancel" onclick="return goBack()">


</div>
<script>
    function goBack() { window.history.back(); }

</script>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
