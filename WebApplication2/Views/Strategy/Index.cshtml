@model IEnumerable<WebApplication2.Models.Strategy>

@{
    ViewBag.Title = "Index";
}

<h2>Index</h2>

<div class="col-md-6">
    @Html.ActionLink("Create New", "Create")
</div>
<div class="col-md-6">
    @if ((ViewData["perm"]).ToString() != "0")
    {



        using (Html.BeginForm())
        {

    <table>
        <tr>
            <td>Group</td>
            <td>@Html.DropDownList("group", new SelectList(ViewBag.Groupcmb), "--Select--")</td>

            <td>Principal</td>
            <td>@Html.DropDownList("prin", new SelectList(ViewBag.Principalcmb), "--Select--")</td>

            <td>OSR</td>
            <td>@Html.DropDownList("osr", new SelectList(ViewBag.OSRcmb), "--Select--")</td>

            <td>OSR</td>
            <td>@Html.DropDownList("OSRcmb", null, "Select OSR", htmlAttributes: new
           {
               @class = "form-control",
               @required = "required"
           }))</td>

            <td>Status</td>
            <td>@Html.DropDownList("status", new SelectList(ViewBag.Statuscmb), "--Select--")</td>

            <td>
                <input type="submit" value="Search" onclick="location.href='@Url.Action("Index", "Strategy")'" />
            </td>
        </tr>
    </table>


        }

    }
    else if ((ViewData["perm"]).ToString() == "0")
    {
        <div class="col-md-6 hide">

            @using (Html.BeginForm())
            {
                @*<h5>Group</h5>
                    <div class="hide">@Html.DropDownList("group", new SelectList(ViewBag.Group), "--Select--")</div>
                    <div class="hide">
                        <input type="submit" value="Search" onclick="location.href='@Url.Action("Index", "Strategy")'" />
                    </div>*@

            }
        </div>
    }

</div>
<div class="col-md-12"></div>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Customer)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Product)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Status)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.NextAction)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Updated)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FollowUpDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.OSR)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Principal)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Value)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Customer)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NextAction)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Updated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FollowUpDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.OSR)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Principal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Value)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.StrategyId, group = item.Group }) |
                @Html.ActionLink("Details", "Details", new { id = item.StrategyId })
                @*|*@
                @*@Html.ActionLink("Delete", "Delete", new { id=item.StrategyId })*@
            </td>
        </tr>
    }

</table>
