@model WebApplication2.Models.Todo

@{
    ViewBag.Title = "Edit";
}


<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.3/jquery.min.js"></script>
<script src="http://code.jquery.com/ui/1.11.1/jquery-ui.min.js"></script>
<script src="http://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/js/bootstrap-datepicker.js"></script>
<link href="https://cdnjs.cloudflare.com/ajax/libs/jqueryui/1.11.4/jquery-ui.css" rel="stylesheet">


<script>
    //$(function () {
    //    $(".datepicker").datepicker();
    //});



    $(document).ready(function () {

        $('#txt_datepicker').datetimepicker({
            format: 'MM/DD/YY'
        });
    });

</script>


@*<h2>Edit</h2>*@
<br />

@using (Html.BeginForm())
{




    <table>
        <tr>
            <td class="col-md-4"><h4><span>Todo-Edit</span></h4></td>
            <td><h5><input type="submit" value="Save" class="btn btn-link" onclick="location.href='@Url.Action("Edit", "Todoes")'" /></h5></td>
            <td>
                @*<button class="btn btn-default" type="button" value="Email" name="Email" onclick="location.href='@Url.Action("Email", "Strategy", new {id = Model.StrategyId})'">Email</button>*@
                @* <input type="submit" value="Save" class="btn btn-default" />*@
                <button class="btn btn-link" type="button" value="Email" name="Email" onclick="location.href='@Url.Action("Email", "Todoes", new {id = Model.ID})'">Email</button>
            </td>
            <td>
                <button class="btn btn-link" type="button" value="Email" name="Email" onclick="location.href='@Url.Action("Updateemail", "Todoes", new {id = Model.ID})'">Request Update</button>
            </td>

        </tr>
    </table>






    @Html.AntiForgeryToken()


    var ownerval = ViewBag.OSRddl;



    <div class="form-horizontal formwhole">
        @*<h4>Todo</h4>*@
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)






        <div class="form-group">
            @Html.LabelFor(model => model.Owner, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(m => m.Owner, new SelectList(ViewBag.Ownerddl, "Owner", "Text"), new { id = "Type", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Owner, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreateDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreateDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CreateDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Task, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Task, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Task, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(m => m.Status, new SelectList(ViewBag.Status, "Status", "Text"), Model.Status, new { id = "Type", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FollowUp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class=" input-group col-md-2">

                @*@Html.EditorFor(model => model.FollowUp, new { htmlAttributes = new { @class = "form-control" } })
                <span class="input-group-btn">
                    <button type="button" class="btn btn-default" data-toggle="datepicker" id="tog" data-target-name="sample-date" />
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>*@

                <div>
                    <div class="input-group date" data-provide="datepicker">
                        @*<input type="text" id="txt_datepicker" class="form-control" />*@
                        @Html.EditorFor(model => model.FollowUp, new { htmlAttributes = new { @class = "form-control" } })
                        <div class="input-group-addon">
                            <span class="glyphicon glyphicon-th"></span>
                        </div>
                    </div>
                </div>

                @*@Html.EditorFor(model => model.FollowUp, @"{0:MM\/dd\/yyyy}", new { htmlAttributes = new { @class = "form-control datepicker" } })*@
                @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Group, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Group, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Creator, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.Creator, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(m => m.Creator, new SelectList(ViewBag.Creatorddl, "Owner", "Text"), new { id = "Type", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Creator, "", new { @class = "text-danger" })
            </div>
        </div>


        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <button class="btn btn-default" type="button" value="Email" name="Email" onclick="location.href='@Url.Action("Email", "Todoes", new {id = Model.ID})'">Email</button>

            </div>
        </div>*@
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
